name: Publish CLI
env:
  DEBUG: napi:*
  APP_NAME: millennium-cli
  MACOSX_DEPLOYMENT_TARGET: '10.13'
on:
  workflow_dispatch:
  repository_dispatch:
    types: [publish-cli]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: tools/millennium-cli-node/
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            architecture: x64
            build: |
              pnpm build:release
              strip -x *.node
          - host: windows-latest
            build: pnpm build:release
            target: x86_64-pc-windows-msvc
            architecture: x64
          - host: windows-latest
            build: pnpm build --target i686-pc-windows-msvc
            target: i686-pc-windows-msvc
            architecture: x64
          - host: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |
              cd tools/millennium-cli-node
              pnpm build:release --target x86_64-unknown-linux-gnu
              strip *.node
          - host: ubuntu-18.04
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |
              cd tools/millennium-cli-node
              pnpm build:release
              strip *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              pnpm build:release --target=aarch64-apple-darwin
              strip -x *.node
          - host: ubuntu-18.04
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |
              cd tools/millennium-cli-node
              pnpm build:release --target=aarch64-unknown-linux-gnu
              aarch64-linux-gnu-strip *.node
          - host: ubuntu-18.04
            architecture: x64
            target: armv7-unknown-linux-gnueabihf
            setup: |
              sudo apt-get update
              sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
            build: |
              pnpm build:release --target=armv7-unknown-linux-gnueabihf
              arm-linux-gnueabihf-strip *.node
          - host: ubuntu-18.04
            architecture: x64
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |
              cd tools/millennium-cli-node
              rustup target add aarch64-unknown-linux-musl
              pnpm build:release --target aarch64-unknown-linux-musl
              /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node
    name: stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 6.32.3
      - name: Setup Node
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 16
          check-latest: true
          cache: pnpm
          cache-dependency-path: 'tools/millennium-cli-node/pnpm-lock.yaml'
          architecture: ${{ matrix.settings.architecture }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.settings.target }}
          working-directory: 'tools/millennium-cli/'
        if: ${{ matrix.settings.docker }}
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: pnpm install --ignore-scripts --no-frozen-lockfile

      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: --user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/root/.cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/root/.cargo/registry -v ${{ github.workspace }}/.cargo/registry/index:/root/.cargo/registry/index -v ${{ github.workspace }}:/build -w /build
          run: ${{ matrix.settings.build }}

      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: tools/millennium-cli-node/${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 6.32.3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: pnpm
          cache-dependency-path: 'tools/millennium-cli-node/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install --ignore-scripts --no-frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: tools/millennium-cli-node/artifacts
      - name: Move artifacts
        run: pnpm artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
