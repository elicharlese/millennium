name: Test Millennium
on:
  push:
    paths:
      - '.github/workflows/test-main.yml'
      - 'src/**/*.rs'
      - 'src/**/Cargo.toml'
  pull_request:
    paths:
      - '.github/workflows/test-main.yml'
      - 'src/**/*.rs'
      - 'src/**/Cargo.toml'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  RUST_BACKTRACE: 1
  CARGO_PROFILE_DEV_DEBUG: 0 # This would add unnecessary bloat to the target folder, decreasing cache efficiency.
jobs:
  test-main:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-latest,
              toolchain: '1.65.0'
            }
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              toolchain: '1.65.0'
            }
          - {
              target: x86_64-apple-darwin,
              os: macos-latest,
              toolchain: '1.65.0'
            }
        features:
          - {
              args: --no-default-features,
              key: no-default
            }
          - {
              args: --features api-all,
              key: api-all
            }
          - {
              args: --features compression,millennium_webview,linux-protocol-headers,isolation,custom-protocol,api-all,cli,updater,system-tray,http-multipart,
              key: all
            }
    steps:
      - uses: actions/checkout@v2
      - name: Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.platform.toolchain }}
          target: ${{ matrix.platform.target }}
          override: true
          default: true
      - name: Install Linux dependencies
        if: contains(matrix.platform.target, 'unknown-linux')
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1 libgtksourceview-3.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf
      - name: Install WebView2
        if: matrix.platform.os == 'windows-latest'
        shell: pwsh
        run: |
          Invoke-WebRequest https://go.microsoft.com/fwlink/p/?LinkId=2124703 -OutFile installwebview.exe -UseBasicParsing
          cmd /C start /wait installwebview.exe /silent /install
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: src -> ../target
          save-if: ${{ matrix.clippy.key == 'all' }}
      - name: Test Rust packages
        run: cargo test -p millennium --target ${{ matrix.platform.target }} ${{ matrix.features.args }}
